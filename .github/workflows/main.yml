name: Main

on:
    - push
    - pull_request

jobs:
    build:
        name: Node.js ${{ matrix.node }}.x, ${{ matrix.os }}

        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                node: [10, 12]
                os: [ubuntu-latest, windows-latest, macos-latest]

        steps:
            - uses: actions/checkout@master
            - name: Checkout
              uses: actions/setup-node@master
              with:
                  version: ${{ matrix.node }}
            - name: Install
              run: yarn install
            - id: build_package
              name: Build
              run: yarn build
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Coverage report
              if: matrix.node == 10 && matrix.os == 'ubuntu-latest'
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
              run: npx codecov -f coverage/*.json
            # see https://github.com/actions/bin/issues/66
            - name: Publish package
              if: matrix.node == 10 && matrix.os == 'ubuntu-latest' && startsWith(github.ref, 'refs/tags/')
              uses: actions/npm@master
              env:
                  NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
              with:
                  args: 'publish --access public'
            # see https://github.com/actions/bin/issues/66
            - name: Notify on publish
              if: matrix.node == 10 && matrix.os == 'ubuntu-latest' && startsWith(github.ref, 'refs/tags/')
              uses: Ilshidur/action-discord@master
              env:
                  DISCORD_WEBHOOK: ${{ secrets.DISCORD_PUBLISH_PACKAGE_WEBHOOK }}
              with:
                  args: '**${{github.repository}}** package has been published'
            - name: Notify on failure
              if: job.steps.build_package.status == failure()
              uses: Ilshidur/action-discord@master
              env:
                  DISCORD_WEBHOOK: ${{ secrets.DISCORD_FAILURE_BUILD_WEBHOOK }}
              with:
                  args: '**${{github.repository}}** *${{github.event_name}}* build is failed (ref: ${{github.ref}})'
